event,arg,line,offset,opcode,locals
call,,1,-1,<0>,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>}"
line,,1,0,LOAD_NAME,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>}"
opcode,,1,0,LOAD_NAME,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>}"
opcode,,1,2,LOAD_NAME,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>}"
opcode,,1,4,LOAD_NAME,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>}"
opcode,,1,6,LOAD_CONST,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>}"
opcode,,1,8,BUILD_CONST_KEY_MAP,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>}"
opcode,,1,10,LOAD_CONST,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>}"
opcode,,1,12,LOAD_CONST,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>}"
opcode,,1,14,MAKE_FUNCTION,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>}"
opcode,,1,16,STORE_NAME,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>}"
line,,20,18,LOAD_NAME,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>, 'isMatch': <function isMatch at 0x7fe58848c4c0>}"
opcode,,20,18,LOAD_NAME,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>, 'isMatch': <function isMatch at 0x7fe58848c4c0>}"
opcode,,20,20,LOAD_CONST,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>, 'isMatch': <function isMatch at 0x7fe58848c4c0>}"
opcode,,20,22,LOAD_CONST,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>, 'isMatch': <function isMatch at 0x7fe58848c4c0>}"
opcode,,20,24,CALL_FUNCTION,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>, 'isMatch': <function isMatch at 0x7fe58848c4c0>}"
call,,1,-1,<0>,"{'s': 'aa', 'p': 'a*'}"
line,,2,0,LOAD_CONST,"{'s': 'aa', 'p': 'a*'}"
opcode,,2,0,LOAD_CONST,"{'s': 'aa', 'p': 'a*'}"
opcode,,2,2,LOAD_FAST,"{'s': 'aa', 'p': 'a*'}"
opcode,,2,4,BINARY_ADD,"{'s': 'aa', 'p': 'a*'}"
opcode,,2,6,LOAD_CONST,"{'s': 'aa', 'p': 'a*'}"
opcode,,2,8,LOAD_FAST,"{'s': 'aa', 'p': 'a*'}"
opcode,,2,10,BINARY_ADD,"{'s': 'aa', 'p': 'a*'}"
opcode,,2,12,ROT_TWO,"{'s': 'aa', 'p': 'a*'}"
opcode,,2,14,STORE_FAST,"{'s': 'aa', 'p': 'a*'}"
opcode,,2,16,STORE_FAST,"{'s': ' aa', 'p': 'a*'}"
line,,3,18,LOAD_GLOBAL,"{'s': ' aa', 'p': ' a*'}"
opcode,,3,18,LOAD_GLOBAL,"{'s': ' aa', 'p': ' a*'}"
opcode,,3,20,LOAD_FAST,"{'s': ' aa', 'p': ' a*'}"
opcode,,3,22,CALL_FUNCTION,"{'s': ' aa', 'p': ' a*'}"
opcode,,3,24,LOAD_GLOBAL,"{'s': ' aa', 'p': ' a*'}"
opcode,,3,26,LOAD_FAST,"{'s': ' aa', 'p': ' a*'}"
opcode,,3,28,CALL_FUNCTION,"{'s': ' aa', 'p': ' a*'}"
opcode,,3,30,ROT_TWO,"{'s': ' aa', 'p': ' a*'}"
opcode,,3,32,STORE_FAST,"{'s': ' aa', 'p': ' a*'}"
opcode,,3,34,STORE_DEREF,"{'s': ' aa', 'p': ' a*', 'lenS': 3}"
line,,4,36,LOAD_CLOSURE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3}"
opcode,,4,36,LOAD_CLOSURE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3}"
opcode,,4,38,BUILD_TUPLE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3}"
opcode,,4,40,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3}"
opcode,,4,42,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3}"
opcode,,4,44,MAKE_FUNCTION,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3}"
opcode,,4,46,LOAD_GLOBAL,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3}"
opcode,,4,48,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3}"
opcode,,4,50,CALL_FUNCTION,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3}"
opcode,,4,52,GET_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3}"
opcode,,4,54,CALL_FUNCTION,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3}"
call,,4,-1,<0>,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3}"
line,,4,0,BUILD_LIST,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3}"
opcode,,4,0,BUILD_LIST,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3}"
opcode,,4,2,LOAD_FAST,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3}"
opcode,,4,4,FOR_ITER,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3}"
opcode,,4,6,STORE_FAST,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3}"
opcode,,4,8,LOAD_CONST,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 0}"
opcode,,4,10,BUILD_LIST,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 0}"
opcode,,4,12,LOAD_DEREF,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 0}"
opcode,,4,14,BINARY_MULTIPLY,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 0}"
opcode,,4,16,LIST_APPEND,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 0}"
opcode,,4,18,JUMP_ABSOLUTE,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 0}"
line,,4,4,FOR_ITER,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 0}"
opcode,,4,4,FOR_ITER,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 0}"
opcode,,4,6,STORE_FAST,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 0}"
opcode,,4,8,LOAD_CONST,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 1}"
opcode,,4,10,BUILD_LIST,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 1}"
opcode,,4,12,LOAD_DEREF,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 1}"
opcode,,4,14,BINARY_MULTIPLY,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 1}"
opcode,,4,16,LIST_APPEND,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 1}"
opcode,,4,18,JUMP_ABSOLUTE,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 1}"
line,,4,4,FOR_ITER,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 1}"
opcode,,4,4,FOR_ITER,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 1}"
opcode,,4,6,STORE_FAST,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 1}"
opcode,,4,8,LOAD_CONST,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 2}"
opcode,,4,10,BUILD_LIST,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 2}"
opcode,,4,12,LOAD_DEREF,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 2}"
opcode,,4,14,BINARY_MULTIPLY,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 2}"
opcode,,4,16,LIST_APPEND,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 2}"
opcode,,4,18,JUMP_ABSOLUTE,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 2}"
line,,4,4,FOR_ITER,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 2}"
opcode,,4,4,FOR_ITER,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 2}"
opcode,,4,20,RETURN_VALUE,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 2}"
return,"[[0, 0, 0], [0, 0, 0], [0, 0, 0]]",4,20,RETURN_VALUE,"{'.0': <range_iterator object at 0x7fe588483990>, 'lenP': 3, 'i': 2}"
opcode,,4,56,STORE_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3}"
line,,5,58,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[0, 0, 0], [0, 0, 0], [0, 0, 0]]}"
opcode,,5,58,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[0, 0, 0], [0, 0, 0], [0, 0, 0]]}"
opcode,,5,60,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[0, 0, 0], [0, 0, 0], [0, 0, 0]]}"
opcode,,5,62,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[0, 0, 0], [0, 0, 0], [0, 0, 0]]}"
opcode,,5,64,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[0, 0, 0], [0, 0, 0], [0, 0, 0]]}"
opcode,,5,66,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[0, 0, 0], [0, 0, 0], [0, 0, 0]]}"
opcode,,5,68,STORE_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[0, 0, 0], [0, 0, 0], [0, 0, 0]]}"
line,,7,70,LOAD_GLOBAL,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]]}"
opcode,,7,70,LOAD_GLOBAL,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]]}"
opcode,,7,72,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]]}"
opcode,,7,74,LOAD_DEREF,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]]}"
opcode,,7,76,CALL_FUNCTION,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]]}"
opcode,,7,78,GET_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]]}"
opcode,,7,80,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]]}"
opcode,,7,82,STORE_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]]}"
line,,8,84,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 1}"
opcode,,8,84,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 1}"
opcode,,8,86,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 1}"
opcode,,8,88,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 1}"
opcode,,8,90,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 1}"
opcode,,8,92,COMPARE_OP,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 1}"
opcode,,8,94,POP_JUMP_IF_FALSE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 1}"
line,,7,80,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 1}"
opcode,,7,80,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 1}"
opcode,,7,82,STORE_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 1}"
line,,8,84,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,8,84,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,8,86,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,8,88,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,8,90,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,8,92,COMPARE_OP,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,8,94,POP_JUMP_IF_FALSE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
line,,9,96,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,9,96,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,9,98,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,9,100,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,9,102,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,9,104,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,9,106,BINARY_SUBTRACT,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,9,108,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,9,110,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,9,112,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,9,114,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,9,116,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,9,118,STORE_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 0], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,9,120,JUMP_ABSOLUTE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2}"
line,,7,80,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,7,80,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2}"
line,,11,122,LOAD_GLOBAL,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,11,122,LOAD_GLOBAL,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,11,124,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,11,126,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,11,128,CALL_FUNCTION,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,11,130,GET_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,11,132,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2}"
opcode,,11,134,STORE_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2}"
line,,12,136,LOAD_GLOBAL,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,12,136,LOAD_GLOBAL,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,12,138,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,12,140,LOAD_DEREF,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,12,142,CALL_FUNCTION,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,12,144,GET_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,12,146,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,12,148,STORE_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
line,,13,150,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,13,150,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,13,152,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,13,154,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,13,156,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,13,158,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,13,160,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,13,162,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,13,164,BUILD_SET,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,13,166,COMPARE_OP,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,13,168,POP_JUMP_IF_FALSE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
line,,14,170,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,14,170,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,14,172,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,14,174,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,14,176,BINARY_SUBTRACT,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,14,178,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,14,180,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,14,182,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,14,184,BINARY_SUBTRACT,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,14,186,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,14,188,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,14,190,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,14,192,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,14,194,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,14,196,STORE_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 0, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,14,198,JUMP_ABSOLUTE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
line,,12,146,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,12,146,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
opcode,,12,148,STORE_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 1, 'i': 1}"
line,,13,150,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,13,150,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,13,152,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,13,154,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,13,156,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,13,158,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,13,160,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,13,162,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,13,164,BUILD_SET,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,13,166,COMPARE_OP,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,13,168,POP_JUMP_IF_FALSE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
line,,15,200,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,15,200,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,15,202,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,15,204,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,15,206,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,15,208,COMPARE_OP,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,15,210,POP_JUMP_IF_FALSE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
line,,16,212,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,212,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,214,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,216,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,218,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,220,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,222,BINARY_SUBTRACT,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,224,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,226,EXTENDED_ARG,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,230,LOAD_GLOBAL,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,232,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,234,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,236,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,238,BINARY_SUBTRACT,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,240,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,242,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,244,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,246,EXTENDED_ARG,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,250,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,252,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,254,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,256,BINARY_SUBTRACT,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,258,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,260,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,262,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,264,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,266,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,268,BUILD_SET,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,270,COMPARE_OP,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,272,CALL_FUNCTION,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,274,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,276,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,278,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,280,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,282,STORE_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 0], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,16,284,JUMP_ABSOLUTE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 1}"
line,,12,146,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,12,146,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,12,286,JUMP_ABSOLUTE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 1}"
line,,11,132,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,11,132,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 1}"
opcode,,11,134,STORE_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 1}"
line,,12,136,LOAD_GLOBAL,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,12,136,LOAD_GLOBAL,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,12,138,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,12,140,LOAD_DEREF,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,12,142,CALL_FUNCTION,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,12,144,GET_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,12,146,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,12,148,STORE_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
line,,13,150,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,13,150,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,13,152,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,13,154,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,13,156,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,13,158,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,13,160,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,13,162,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,13,164,BUILD_SET,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,13,166,COMPARE_OP,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,13,168,POP_JUMP_IF_FALSE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
line,,14,170,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,14,170,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,14,172,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,14,174,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,14,176,BINARY_SUBTRACT,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,14,178,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,14,180,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,14,182,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,14,184,BINARY_SUBTRACT,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,14,186,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,14,188,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,14,190,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,14,192,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,14,194,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,14,196,STORE_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,14,198,JUMP_ABSOLUTE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
line,,12,146,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,12,146,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
opcode,,12,148,STORE_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 1, 'i': 2}"
line,,13,150,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,13,150,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,13,152,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,13,154,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,13,156,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,13,158,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,13,160,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,13,162,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,13,164,BUILD_SET,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,13,166,COMPARE_OP,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,13,168,POP_JUMP_IF_FALSE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
line,,15,200,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,15,200,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,15,202,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,15,204,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,15,206,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,15,208,COMPARE_OP,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,15,210,POP_JUMP_IF_FALSE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
line,,16,212,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,212,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,214,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,216,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,218,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,220,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,222,BINARY_SUBTRACT,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,224,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,226,EXTENDED_ARG,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,230,LOAD_GLOBAL,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,232,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,234,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,236,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,238,BINARY_SUBTRACT,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,240,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,242,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,244,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,246,EXTENDED_ARG,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,250,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,252,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,254,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,256,BINARY_SUBTRACT,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,258,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,260,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,262,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,264,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,266,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,268,BUILD_SET,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,270,COMPARE_OP,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,272,CALL_FUNCTION,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,274,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,276,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,278,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,280,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,282,STORE_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 0]], 'j': 2, 'i': 2}"
opcode,,16,284,JUMP_ABSOLUTE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 1]], 'j': 2, 'i': 2}"
line,,12,146,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 1]], 'j': 2, 'i': 2}"
opcode,,12,146,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 1]], 'j': 2, 'i': 2}"
opcode,,12,286,JUMP_ABSOLUTE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 1]], 'j': 2, 'i': 2}"
line,,11,132,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 1]], 'j': 2, 'i': 2}"
opcode,,11,132,FOR_ITER,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 1]], 'j': 2, 'i': 2}"
line,,18,288,LOAD_GLOBAL,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 1]], 'j': 2, 'i': 2}"
opcode,,18,288,LOAD_GLOBAL,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 1]], 'j': 2, 'i': 2}"
opcode,,18,290,LOAD_FAST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 1]], 'j': 2, 'i': 2}"
opcode,,18,292,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 1]], 'j': 2, 'i': 2}"
opcode,,18,294,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 1]], 'j': 2, 'i': 2}"
opcode,,18,296,LOAD_CONST,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 1]], 'j': 2, 'i': 2}"
opcode,,18,298,BINARY_SUBSCR,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 1]], 'j': 2, 'i': 2}"
opcode,,18,300,CALL_FUNCTION,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 1]], 'j': 2, 'i': 2}"
opcode,,18,302,RETURN_VALUE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 1]], 'j': 2, 'i': 2}"
return,True,18,302,RETURN_VALUE,"{'s': ' aa', 'p': ' a*', 'lenS': 3, 'lenP': 3, 'dp': [[1, 0, 1], [0, 1, 1], [0, 0, 1]], 'j': 2, 'i': 2}"
opcode,,20,26,POP_TOP,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>, 'isMatch': <function isMatch at 0x7fe58848c4c0>}"
opcode,,20,28,LOAD_CONST,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>, 'isMatch': <function isMatch at 0x7fe58848c4c0>}"
opcode,,20,30,RETURN_VALUE,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>, 'isMatch': <function isMatch at 0x7fe58848c4c0>}"
return,,20,30,RETURN_VALUE,"{'functionCallString': 'def isMatch(s: str, p: str) -> bool:\n    s, p = \' \' + s, \' \' + p\n    lenS, lenP = len(s), len(p)\n    dp = [[0]*(lenP) for i in range(lenS)]\n    dp[0][0] = 1\n\n    for j in range(1, lenP):\n        if p[j] == \'*\':\n            dp[0][j] = dp[0][j-2]\n\n    for i in range(1, lenS):\n        for j in range(1, lenP):\n            if p[j] in {s[i], \'.\'}:\n                dp[i][j] = dp[i-1][j-1]\n            elif p[j] == ""*"":\n                dp[i][j] = dp[i][j-2] or int(dp[i-1][j] and p[j-1] in {s[i], \'.\'})\n\n    return bool(dp[-1][-1])\n\nisMatch(""aa"", ""a*"")\n', 'f': <_io.TextIOWrapper name='algoData.csv' mode='w' encoding='UTF-8'>, 'writer': <_csv.writer object at 0x7fe5884a11d0>, 'isMatch': <function isMatch at 0x7fe58848c4c0>}"
